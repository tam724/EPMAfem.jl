using Revise
using EPMAfem
using Gridap
using LinearAlgebra
using Plots
using Distributions
using ConcreteStructs
using QuadGK
include("../scripts/plot_overloads.jl")
Makie.inline!(false)



## 1D exact solution
function interval_ray_intersection(R, x, Ω)
    if iszero(Ω) return (nothing, nothing) end

    if norm(x) < R
        if Ω > 0
            return (nothing, (x + R) / Ω)
        else #  Ω < 0
            return (nothing, (x - R) / Ω)
        end
    else # norm(x) >= R
        if x > 0 && Ω < 0
            return (nothing, nothing)
        elseif x > 0 && Ω > 0
            return (-(R - x)/Ω, 2*R/abs(Ω))
        elseif x < 0 && Ω > 0
            return (nothing, nothing)
        else # x < 0 && Ω < 0
            return (-(-R-x)/Ω, 2*R/abs(Ω))
        end
    end
end

# plots for debugging interval_ray_intersection
# nothing_to_zero(x) = isnothing(x) ? 0.0 : x

# plot(-1:0.01:1, x -> nothing_to_zero(interval_ray_intersection(0.1, x, -0.1)[1]))
# plot!(-1:0.01:1, x -> nothing_to_zero(interval_ray_intersection(0.1, x, -0.1)[2]))

function distr_func(x, Ω; R, b, μ_in, μ_out)
    if iszero(Ω)
        if norm(x) < R
            return b / μ_in
        else
            return 0.0
        end
    end
    path_before, path_in = interval_ray_intersection(R, x, Ω)
    contrib = 0.0
    if !isnothing(path_in)
        contrib += b*(-exp(-μ_in*path_in) + 1.0)/μ_in
    end
    if !isnothing(path_before)
        contrib *= exp(-μ_out*path_before)
    end
    return contrib
end

# distribution function plots
# plot(-1:0.01:1, x -> distr_func(x, 0.01; R=0.1, b=1.0, μ_in=10.0, μ_out=0.0))
# plot(-1:0.01:1, Ω -> distr_func(0.1, Ω; R=0.1, b=1.0, μ_in=10.0, μ_out=0.0))

heatmap(-1:0.001:1, -1:0.001:1, (x, Ω) -> distr_func(x, Ω; R=0.1, b=1.0, μ_in=10.0, μ_out=1.0))
Plots.xlabel!("x")
Plots.ylabel!("Ω")

# Plots.xlabel!("x")
# Plots.ylabel!("Ω")

function intensity(x; R, kwargs...)
    if norm(x) <= R
        return quadgk(Ω -> 0.5*distr_func(x, Ω; R=R, kwargs...), -1.0, 1.0)[1]
    elseif x > R
        return quadgk(Ω -> 0.5*distr_func(x, Ω; R=R, kwargs...), 0.0, 1.0)[1]
    elseif x < R
        return quadgk(Ω -> 0.5*distr_func(x, Ω; R=R, kwargs...), -1.0, 0.0)[1]
    end
end

plot(-1:0.01:1, x -> intensity(x; R=0.1, b=10.0, μ_in=100.0, μ_out=1.0))

plot(-1:0.01:1, x -> intensity(x; R=0.1, b=10.0, μ_in=1000.0, μ_out=1.0))
hline!([10.0/1000.0])

plot()
for R in [0.0001, 0.001, 0.01, 0.1]
    plot!(-1:0.01:1, x -> intensity(x; R=R, b=1.0/(2.0*R), μ_in=1.0, μ_out=0.0))
end
plot!()



### 1D numerical solution

@concrete struct DummyPNEquations <: EPMAfem.AbstractMonochromPNEquations end
EPMAfem.number_of_elements(::DummyPNEquations) = 1
EPMAfem.scattering_coefficient(::DummyPNEquations, e) = 0.0
EPMAfem.scattering_kernel(::DummyPNEquations, e) = μ -> 0.0
EPMAfem.absorption_coefficient(::DummyPNEquations, e) = 1.0
function EPMAfem.mass_concentrations(::DummyPNEquations, e, x)
    return (norm(x) < 0.15) ? 50.0 : 0.01
end

eq = DummyPNEquations()
space_model = EPMAfem.SpaceModels.GridapSpaceModel(CartesianDiscreteModel((-0.5, 0.5), (300)))

plotly()
plot()
sol = Dict()
for N in [27]
    direction_model = EPMAfem.SphericalHarmonicsModels.EOSphericalHarmonicsModel(N, 1, 1.0, 15.0)
    model = EPMAfem.DiscreteMonochromPNModel(space_model, direction_model)

    function q(x)
        return (norm(x) < 0.15) ? 10.0 : 0.0
    end

    source = EPMAfem.PNXΩSource(q, Ω -> 1.0)
    rhs = EPMAfem.discretize_rhs(source, model, EPMAfem.cpu())
    problem = EPMAfem.discretize_problem(eq, model, EPMAfem.cpu())
    system = EPMAfem.system2(problem, EPMAfem.Krylov.minres)

    solution = EPMAfem.allocate_solution_vector(system)
    EPMAfem.solve(solution, system, rhs)
    solp, solm = EPMAfem.pmview(solution, model)
    sol[N] = [solp, solm]
    func = EPMAfem.SpaceModels.interpolable((p=solp[:, 1] |> collect, ), space_model)
    # contourf(-0.5:0.01:0.5, -0.5:0.01:0.5, (z, x) -> func(Gridap.VectorValue(z, x)))

    vals = -0.5:0.0001:0.5 .|> (z -> func(Gridap.VectorValue(z)))

    p = plot!(-0.5:0.0001:0.5, vals, label="P$(N)")
    @show "$N, max=$(maximum(vals))"
    display(p)
end

kwargs_analytic = (R=0.15, b=10.0, μ_in=50.0, μ_out=0.01)
I_0 = intensity(0; kwargs_analytic...)
plot!(-0.5:0.0001:0.5, x -> 0.7089406763978845/I_0*intensity(x; kwargs_analytic...))

p1 = heatmap(-0.5:0.01:0.5, -1:0.01:1, (x, Ω) -> distr_func(x, Ω; kwargs_analytic...), clims=(-0.1,0.3))

function distr_func_numeric(x, Ω, N)
    direction_model = EPMAfem.SphericalHarmonicsModels.EOSphericalHarmonicsModel(N, 1)
    xp, xm = EPMAfem.SpaceModels.eval_basis(space_model, VectorValue(x))
    θ = acos(Ω)
    Ωp, Ωm = EPMAfem.SphericalHarmonicsModels.eval_basis(direction_model, VectorValue(Ω, sin(θ)))

    solp, solm = sol[N]
    return dot(xp, solp * Ωp) + dot(xm, solm * Ωm)
end

p2 = heatmap(-0.5:0.01:0.5, -1:0.01:1, (x, Ω) -> distr_func_numeric(x, Ω, 27), clims=(-0.1,0.3))

plot(p1, p2, size=(700, 300))

nothing

# Ωpm = EPMAfem.SphericalHarmonicsModels.eval_basis(direction_model, VectorValue([1.0, 1.0, 0.0]) |> normalize)
# func_d = EPMAfem.SpaceModels.interpolable((p=(solp |> collect) * Ωpm.p, m=(solm |> collect) * Ωpm.m), space_model)
# contourf(-0.5:0.01:0.5, -0.5:0.01:0.5, (z, x) -> func_d(Gridap.VectorValue(z, x)))

# x = [0.01959789871473175, 0.019659662113976177, 0.019721717282502257, 0.019784065754090464, 0.019846709543337813, 0.019909651143950626, 0.01997289246298997, 0.020036434896507256, 0.020100281427079494, 0.02016443394412142, 0.020228895279867466, 0.020293665152775236, 0.020358748310962377, 0.020424146093775616, 0.02048986484284827, 0.02055589447096164, 0.02062226472482341, 0.020688927972088773, 0.020755932538796814, 0.020823265356391417, 0.02089092896429955, 0.02095892558385133, 0.021027257223377272, 0.021095926994411672, 0.021164937381400947, 0.0212342899832933, 0.021303988250675494, 0.02137403413520829, 0.021444430474486204, 0.021515179770913898, 0.02158628445956355, 0.021657747814174854, 0.0217295713976918, 0.021801758815408804, 0.021874312463601765, 0.021947235149854243, 0.022020529602019397, 0.022094199254181563, 0.022168244703581263, 0.022242671567513025, 0.022317480969101702, 0.022392676600602606, 0.022468261400881966, 0.022544237968340673, 0.02262060965484225, 0.022697379118582127, 0.022774550847509942, 0.02285212495221623, 0.02293010712839954, 0.02300850000413751, 0.023087306470243252, 0.02316653000575513, 0.023246173671039812, 0.02332624095671536, 0.02340673524173949, 0.023487659670736554, 0.023569017901905312, 0.02365081340295904, 0.023733049325029145, 0.023815729824283385, 0.023898857725316434, 0.023982437235924824, 0.02406647191547462, 0.024150965491155862, 0.02423592123606873, 0.024321343728721388, 0.024407236006049823, 0.024493602504271496, 0.02458044665103208, 0.024667772745998268, 0.024755585834732825, 0.02484388710416032, 0.024932683323964915, 0.0250219776044202, 0.025111774356061187, 0.025202082725395016, 0.025289034488343926, 0.025384222613673443, 0.025476071047619328, 0.02556844443476724, 0.025661346708493415, 0.025754781954678303, 0.02584875515552507, 0.02594327085086433, 0.02603833371561649, 0.026133948779885882, 0.026230120400730365, 0.026326853876273044, 0.02642415427530285, 0.026522026110947453, 0.0266204748557134, 0.026719505658194555, 0.026819123788626054, 0.026919334425911795, 0.027020152484290072, 0.02712155547002449, 0.027223574611186192, 0.02732620908247925, 0.027429463583575047, 0.02753334379259997, 0.02763785533149617, 0.027743004416895284, 0.027848796072931697, 0.02795523719765598, 0.028062333556826906, 0.028170093668967014, 0.02827851676659525, 0.028387616388937373, 0.028497396543018236, 0.02860786299984714, 0.028719025604651987, 0.028830702668504266, 0.028943450879750924, 0.029056732107569816, 0.029170733919765896, 0.029285466183391853, 0.029400928330644265, 0.029517135153337468, 0.02963409144460488, 0.02975180496035071, 0.029870282634618512, 0.02998953327550484, 0.030109563401340054, 0.030230381039343883, 0.030351995337983984, 0.030474412879566294, 0.0305976434832152, 0.030721693843959605, 0.03084657380847702, 0.030972291590685114, 0.031098855262243614, 0.031226274711058974, 0.031354561748152515, 0.03148371502408135, 0.031613754885130865, 0.03174468645819452, 0.03187651983380496, 0.032009264430960756, 0.03214293099602006, 0.03227752748455268, 0.032413066312343614, 0.03254955584666537, 0.03268700804671778, 0.03282543319020566, 0.03296484187285366, 0.03310524514772021, 0.03324665409669224, 0.03338908055319999, 0.033532535402555984, 0.033677030699937785, 0.03382257816996121, 0.03396919055664984, 0.03411687924223843, 0.034265657529372426, 0.03441553779486956, 0.034566533117838194, 0.034718656201704313, 0.03487192091143392, 0.03502634141988282, 0.03518193031162453, 0.03533870334802151, 0.03549667295422421, 0.035655855116306846, 0.03581626470291114, 0.03597791597336188, 0.0361408251882827, 0.03630500804461938, 0.036470479723156035, 0.036637258231240144, 0.03680535710563254, 0.03697479619313271, 0.037145591610205045, 0.037317760453657395, 0.03749132278055505, 0.03766629279525845, 0.03784269189777728, 0.038020539441191444, 0.03819985318924077, 0.03838065419970184, 0.038562964443081015, 0.03874679498979769, 0.03893217717685585, 0.03911912872093994, 0.03930767114035669, 0.039497827485232936, 0.0396896193147757, 0.03988307091298624, 0.04007820444224189, 0.04027504692272382, 0.04047361796794642, 0.04067394833068719, 0.04087605906002935, 0.04107997989053721, 0.04128573659073787, 0.041493358314194546, 0.0417028683014546, 0.041914301147740696, 0.04212768130797844, 0.0423430421528358, 0.04256041441562058, 0.042779828168357154, 0.043001317055572134, 0.04322491316355187, 0.04345065059120269, 0.04367856411773162, 0.04390868996059951, 0.044141063936604046, 0.044375724106799116, 0.044612707098108585, 0.044852071494442404, 0.045093804807804325, 0.045338001077669984, 0.04558468481121484, 0.04583389979713153, 0.04608569088505943, 0.04634010446963458, 0.046597188016227066, 0.0468569899582506, 0.047045647789737334, 0.04738495516145973, 0.04765321741149334, 0.04792440415614152, 0.0481985809322438, 0.048475795382055695, 0.04875611316906462, 0.04903959405598384, 0.04932630129035613, 0.04961630045644051, 0.04990965903495019, 0.05020644608993778, 0.050506734662947764, 0.050810599020217465, 0.051118116115187795, 0.051429365305357994, 0.05174442857657942, 0.05206339746973089, 0.05238634522349937, 0.05271337625273684, 0.05304458372985744, 0.0533800646211635, 0.053719921345048154, 0.05406425992297998, 0.054413192452924065, 0.05476683132457696, 0.05512529862979322, 0.05548871804655868, 0.05585721942017385, 0.05623094427763816, 0.05661001725319469, 0.05699460528057703, 0.05738484992164135, 0.05778090541394911, 0.05818298353440447, 0.0585912175820717, 0.05900580931989041, 0.05942695342586707, 0.0598548576425752, 0.06028973690380506, 0.06073182145756432, 0.06118135281808214, 0.061638585284638996, 0.06210378926140102, 0.0625772507394259, 0.06305927388788117, 0.06355018056774968, 0.06405031625695486, 0.06456004483002434, 0.06507976033694982, 0.06560988172596452, 0.06615085887924238, 0.06670317582036323, 0.06726735603769786, 0.06784395821302368, 0.0684335987000564, 0.06903694652172174, 0.06965470268937096, 0.07028768072924253, 0.07093674287486162, 0.0716028472915267, 0.07228704906329708, 0.07299052959319788, 0.07371460489396046, 0.07446075120089463, 0.0752306450768962, 0.07602618469730536, 0.07684955596988269, 0.077703287526769, 0.0785903308106193, 0.07951417467455471, 0.08047899556036137, 0.08148986583127249, 0.08255306184998111, 0.08367651294189396, 0.08487049597850341, 0.08614879667132098, 0.08753067827584951, 0.0890446774889043, 0.09073665738675595, 0.09269049914533302, 0.09510136716715512, 0.09912254479506137, 0.10835728818863553, 0.11483678723628718, 0.12028586480570329, 0.12507147362310764, 0.1293682367266125, 0.13327926465437925, 0.1368728835631211, 0.14019780229175074, 0.14329055240498365, 0.14617957589739067, 0.14888766093047273, 0.15143348504813753, 0.1538326409396787, 0.15609834549671314, 0.15824194567921532, 0.1602732893924102, 0.16220100366809842, 0.16403270749782756, 0.16577517750667464, 0.16743447889327068, 0.16901607032365512, 0.17052488897882365, 0.17196542026202544, 0.17334175549490002, 0.17465764009861215, 0.17591651415686624, 0.17712154682002892, 0.1782756656852119, 0.17938158204511387, 0.18044181271249915, 0.18145869898752737, 0.182434423224866, 0.18337102337222444, 0.1842704057847397, 0.18513435656590255, 0.1859645516432189, 0.18676256575200678, 0.18752988047294614, 0.18826789144606104, 0.1889779148650916, 0.18966119334074233, 0.19031890120841058, 0.19095214934535193, 0.1915619895531979, 0.19214941855422898, 0.1927153816434083, 0.1932607760327678, 0.19378645392011468, 0.19429322531009685, 0.19478186061226213, 0.1952530930378416, 0.19570762081446605, 0.1961461092358425, 0.19656919256152344, 0.19697747578024666, 0.1973715362488817, 0.1977519252177522, 0.19811916925199263, 0.19847377155761875, 0.19881621322012694, 0.19914695436267343, 0.19946643523020643, 0.19977507720532173, 0.20007328376107603, 0.2003614413555142, 0.200639920272238, 0.2009090754109618, 0.20116924703165598, 0.20142076145557075, 0.20166393172615454, 0.20189905823263, 0.2021264292987646, 0.20234632173916772, 0.20255900138526012, 0.20276472358289335, 0.20296373366344367, 0.20315626739006587, 0.2033425513806646, 0.20352280349485563, 0.20369723328544692, 0.20386604221809812, 0.20402942415627887, 0.20418756561662665, 0.2043406460932808, 0.20448883835292525, 0.20463230871557625, 0.20477121732191778, 0.20490571838793925, 0.20503596044757738, 0.20516208658401902, 0.20528423465028078, 0.20540253747964027, 0.20551712308645986, 0.20562811485790822, 0.20573563173705528, 0.20583978839778677, 0.20594069541195695, 0.2060384594091753, 0.20613318322959673, 0.2062249660700654, 0.2063139036239418, 0.20640008821492178, 0.2064836089251423, 0.20656455171784838, 0.2066429995548829, 0.20671903250924556, 0.20679272787295325, 0.20686416026042348, 0.20693340170758756, 0.207000521766932, 0.2070655875986544, 0.20712866405811114, 0.20718981377972437, 0.2072490972575074, 0.2073065729223597, 0.20736229721627472, 0.20741632466359622, 0.20746870793945252, 0.20751949793549154, 0.20756874382303317, 0.20761649311374997, 0.2076627917179815, 0.20770768400078332, 0.20775121283580542, 0.20779341965709158, 0.20783434450888674, 0.20787402609353392, 0.20791250181754017, 0.20794980783587724, 0.20798597909464567, 0.20802104937202304, 0.20805505131776397, 0.20808801649115768, 0.20811997539756688, 0.2081509575235934, 0.2081809913709218, 0.20821010448891086, 0.2082383235059356, 0.20826567415959066, 0.20829218132575117, 0.20831786904655397, 0.20834276055733816, 0.20836687831258222, 0.20839024401087755, 0.20841287861897317, 0.20843480239492643, 0.20845603491039275, 0.2084765950720859, 0.20849650114243898, 0.2085157707594951, 0.20853442095605546, 0.20855246817811104, 0.20856992830258375, 0.20858681665361817, 0.2086031480229263, 0.2086189366777702, 0.20863419638399988, 0.20864894041677037, 0.2086631815753957, 0.2086769321968784, 0.20869020416891654, 0.20870300894240365, 0.2087153575434393, 0.20872726058486574, 0.20873872827734444, 0.2087497704399888, 0.2087603965105649, 0.20877061555527457, 0.2087804362781325, 0.2087898670299502, 0.20879891581693727, 0.20880759030893103, 0.20881589784726623, 0.20882384545229216, 0.20883143983054928, 0.20883868738161218, 0.2088455942046091, 0.20885216610442445, 0.20885840859759336, 0.20886432691789503, 0.20886992602165164, 0.20887521059273934, 0.20888018504731776, 0.2088848535382835, 0.20888921995945334, 0.20889328794948173, 0.2088970608955183, 0.20890054193660845, 0.20890373396684134, 0.20890663963825565, 0.2089092613634874, 0.2089116013181901, 0.2089136614432093, 0.20891544344652246, 0.2089169488049447, 0.2089181787656041, 0.20891913434718587, 0.20891981634094903, 0.20892022531151566, 0.2089203615974339, 0.20892022531151566, 0.20891981634094903, 0.2089191343471859, 0.20891817876560415, 0.20891694880494485, 0.2089154434465227, 0.20891366144320983, 0.2089116013181911, 0.208909261363488, 0.20890663963825654, 0.20890373396684253, 0.20890054193660845, 0.2088970608955183, 0.20889328794948173, 0.20888921995945334, 0.2088848535382835, 0.20888018504731778, 0.20887521059273934, 0.20886992602165164, 0.20886432691789503, 0.20885840859759336, 0.20885216610442445, 0.2088455942046091, 0.20883868738161218, 0.20883143983054928, 0.20882384545229216, 0.20881589784726623, 0.20880759030893103, 0.20879891581693727, 0.2087898670299502, 0.2087804362781325, 0.20877061555527457, 0.2087603965105649, 0.2087497704399888, 0.20873872827734447, 0.20872726058486574, 0.2087153575434393, 0.20870300894240365, 0.20869020416891654, 0.20867693219687844, 0.2086631815753957, 0.20864894041677037, 0.20863419638399988, 0.2086189366777702, 0.2086031480229263, 0.20858681665440093, 0.20856992830258375, 0.20855246817811104, 0.20853442095605546, 0.2085157707594951, 0.20849650114243898, 0.2084765950720859, 0.20845603491039275, 0.20843480239492643, 0.20841287861897317, 0.20839024401087755, 0.20836687831258222, 0.20834276055733814, 0.20831786904655397, 0.20829218132575117, 0.20826567415959066, 0.2082383235059356, 0.20821010448891084, 0.2081809913709218, 0.2081509575235934, 0.20811997539756688, 0.2080880164911577, 0.20805505131776397, 0.20802104937202304, 0.20798597909464567, 0.20794980783587727, 0.20791250181754017, 0.2078740260935339, 0.20783434450888677, 0.20779341965709158, 0.20775121283580542, 0.20770768400078332, 0.2076627917179815, 0.20761649311375, 0.20756874382303317, 0.20751949793549154, 0.20746870793945252, 0.20741632466359622, 0.20736229721627475, 0.20730657292235968, 0.2072490972575074, 0.20718981377972437, 0.20712866405811117, 0.2070655875986544, 0.207000521766932, 0.20693340170758756, 0.20686416026042348, 0.20679272787295325, 0.20671903250924556, 0.2066429995548829, 0.20656455171784838, 0.2064836089251423, 0.20640008821492178, 0.2063139036239418, 0.20622496607006544, 0.20613318322959673, 0.20603845940917534, 0.20594069541195695, 0.20583978839778677, 0.20573563173705528, 0.20562811485790822, 0.20551712308645986, 0.20540253747964027, 0.20528423465028076, 0.20516208658401902, 0.20503596044757738, 0.20490571838793925, 0.20477121732191778, 0.20463230871557625, 0.20448883835292525, 0.2043406460932808, 0.20418756561662665, 0.20402942415627887, 0.20386604221809812, 0.20369723328544692, 0.20352280349485563, 0.20334255138066462, 0.20315626739006587, 0.2029637336634436, 0.20276472358289335, 0.20255900138526012, 0.20234632173916772, 0.20212642929876456, 0.20189905823262996, 0.20166393172615454, 0.20142076145557075, 0.201169247031656, 0.2009090754109618, 0.20063992027223804, 0.2003614413555142, 0.20007328376107603, 0.19977507720532173, 0.19946643523020643, 0.19914695436267343, 0.19881621322012694, 0.19847377155761875, 0.19811916925199263, 0.19775192521775217, 0.19737153624888168, 0.19697747578024666, 0.19656919256152344, 0.1961461092358425, 0.19570762081446605, 0.1952530930378416, 0.19478186061226213, 0.19429322531009685, 0.19378645392011468, 0.1932607760327678, 0.1927153816434083, 0.19214941855422898, 0.1915619895531979, 0.19095214934535193, 0.19031890120841058, 0.18966119334074233, 0.1889779148650916, 0.18826789144606101, 0.1875298804729461, 0.18676256575200678, 0.1859645516432189, 0.18513435656590255, 0.1842704057847397, 0.18337102337222444, 0.18243442322486603, 0.1814586989875274, 0.18044181271249915, 0.17938158204511387, 0.1782756656852119, 0.17712154682002887, 0.17591651415686624, 0.17465764009861215, 0.17334175549490002, 0.17196542026202546, 0.17052488897882367, 0.1690160703236551, 0.16743447889327068, 0.16577517750667467, 0.16403270749782758, 0.16220100366809845, 0.1602732893924102, 0.15824194567921532, 0.15609834549671314, 0.1538326409396787, 0.15143348504813756, 0.1488876609304727, 0.14617957589739067, 0.14329055240498362, 0.14019780229175074, 0.13687288356312113, 0.1332792646543792, 0.12936823672661246, 0.12507147362310764, 0.12028586480570329, 0.11483678723628718, 0.10835728818863552, 0.09912254479506137, 0.0951013671671551, 0.092690499145333, 0.09073665738675595, 0.08904467748890427, 0.08753067827584948, 0.08614879667132098, 0.0848704959785034, 0.08367651294189396, 0.08255306184998111, 0.08148986583127249, 0.08047899556036138, 0.0795141746745547, 0.0785903308106193, 0.07770328752676899, 0.07684955596988267, 0.07602618469730538, 0.07523064507689621, 0.07446075120089463, 0.07371460489396045, 0.07299052959319786, 0.07228704906329707, 0.07160284729152669, 0.07093674287486161, 0.07028768072924253, 0.06965470268937098, 0.06903694652172174, 0.0684335987000564, 0.06784395821302369, 0.06726735603769786, 0.0667031758203632, 0.0661508588792424, 0.0656098817259645, 0.06507976033694977, 0.06456004483002435, 0.06405031625695486, 0.06355018056774965, 0.06305927388788116, 0.0625772507394259, 0.06210378926140102, 0.06163858528463899, 0.061181352818082124, 0.06073182145756431, 0.060289736903805055, 0.0598548576425752, 0.05942695342586707, 0.0590058093198904, 0.05859121758207169, 0.05818298353440445, 0.0577809054139491, 0.05738484992164134, 0.05699460528057703, 0.056610017253194686, 0.056230944277638154, 0.055857219420173854, 0.05548871804655867, 0.05512529862979321, 0.05476683132457695, 0.05441319245292405, 0.05406425992297999, 0.05371992134504816, 0.0533800646211635, 0.05304458372985743, 0.05271337625273684, 0.052386345223499366, 0.05206339746973089, 0.05174442857657941, 0.051429365305358, 0.051118116115187795, 0.050810599020217444, 0.050506734662947764, 0.05020644608993779, 0.04990965903495017, 0.04961630045644052, 0.04932630129035612, 0.04903959405598385, 0.04875611316906462, 0.04847579538205569, 0.048198580932243794, 0.047924404156141485, 0.047653217411493344, 0.04738495516145971, 0.047045647789737334, 0.0468569899582506, 0.04659718801622706, 0.046340104469634574, 0.04608569088505942, 0.045833899797131525, 0.04558468481121483, 0.04533800107766998, 0.045093804807804325, 0.04485207149444239, 0.04461270709810856, 0.04437572410679911, 0.04414106393660402, 0.043908689960599497, 0.04367856411773162, 0.04345065059120268, 0.043224913163551856, 0.04300131705557213, 0.04277982816835715, 0.042560414415620564, 0.042343042152835776, 0.04212768130797842, 0.041914301147740696, 0.04170286830145461, 0.04149335831419454, 0.04128573659073788, 0.04107997989053721, 0.04087605906002934, 0.04067394833068719, 0.0404736179679464, 0.040275046922723816, 0.04007820444224189, 0.03988307091298624, 0.03968961931477568, 0.039497827485232916, 0.03930767114035669, 0.039119128720939936, 0.03893217717685585, 0.03874679498979768, 0.03856296444308101, 0.03838065419970183, 0.03819985318924075, 0.03802053944119143, 0.03784269189777728, 0.037666292795258446, 0.037491322780555045, 0.03731776045365739, 0.03714559161020503, 0.0369747961931327, 0.03680535710563254, 0.03663725823124013, 0.036470479723156014, 0.036305008044619363, 0.03614082518828271, 0.035977915973361876, 0.03581626470291113, 0.03565585511630683, 0.03549667295422419, 0.03533870334802151, 0.03518193031162452, 0.035026341419882805, 0.0348719209114339, 0.03471865620170431, 0.034566533117838194, 0.03441553779486956, 0.034265657529372405, 0.03411687924223842, 0.03396919055664984, 0.03382257816996122, 0.03367703069993778, 0.03353253540255598, 0.03338908055319999, 0.033246654096692224, 0.03310524514772021, 0.03296484187285366, 0.03282543319020566, 0.03268700804671777, 0.032549555846665364, 0.03241306631234363, 0.03227752748455268, 0.032142930996020044, 0.03200926443096074, 0.03187651983380496, 0.0317446864581945, 0.031613754885130865, 0.031483715024081343, 0.03135456174815251, 0.031226274711058963, 0.031098855262243607, 0.030972291590685114, 0.030846573808477006, 0.0307216938439596, 0.0305976434832152, 0.03047441287956629, 0.03035199533798397, 0.03023038103934388, 0.030109563401340043, 0.02998953327550484, 0.029870282634618505, 0.029751804960350705, 0.02963409144460488, 0.029517135153337464, 0.02940092833064426, 0.02928546618339184, 0.029170733919765882, 0.029056732107569802, 0.028943450879750917, 0.028830702668504255, 0.028719025604651987, 0.028607862999847137, 0.028497396543018225, 0.028387616388937366, 0.028278516766595246, 0.02817009366896701, 0.0280623335568269, 0.027955237197655976, 0.0278487960729317, 0.027743004416895277, 0.027637855331496174, 0.027533343792599953, 0.027429463583575037, 0.027326209082479246, 0.027223574611186182, 0.027121555470024494, 0.02702015248429007, 0.02691933442591179, 0.026819123788626043, 0.026719505658194545, 0.02662047485571339, 0.026522026110947457, 0.02642415427530284, 0.026326853876273038, 0.02623012040073036, 0.026133948779885882, 0.02603833371561648, 0.025943270850864324, 0.02584875515552508, 0.025754781954678296, 0.025661346708493404, 0.02556844443476723, 0.025476071047619314, 0.02538422261367344, 0.025289034488343926, 0.025202082725395005, 0.025111774356061177, 0.025021977604420195, 0.02493268332396491, 0.02484388710416031, 0.024755585834732818, 0.024667772745998257, 0.024580446651032074, 0.024493602504271496, 0.02440723600604982, 0.024321343728721377, 0.02423592123606873, 0.02415096549115586, 0.02406647191547461, 0.023982437235924813, 0.023898857725316427, 0.023815729824283385, 0.023733049325029138, 0.02365081340295903, 0.023569017901905298, 0.023487659670736554, 0.02340673524173948, 0.023326240956715354, 0.023246173671039806, 0.023166530005755127, 0.02308730647024325, 0.023008500004137504, 0.02293010712839953, 0.022852124952216224, 0.022774550847509935, 0.022697379118582117, 0.02262060965484225, 0.02254423796834067, 0.022468261400881963, 0.0223926766006026, 0.0223174809691017, 0.022242671567513018, 0.02216824470358125, 0.022094199254181553, 0.022020529602019383, 0.021947235149854236, 0.021874312463601758, 0.0218017588154088, 0.021729571397691796, 0.021657747814174847, 0.02158628445956354, 0.02151517977091389, 0.021444430474486197, 0.02137403413520828, 0.02130398825067549, 0.021234289983293294, 0.021164937381400944, 0.021095926994411665, 0.02102725722337726, 0.02095892558385132, 0.020890928964299546, 0.020823265356391413, 0.020755932538796807, 0.020688927972088763, 0.02062226472482341, 0.020555894470961632, 0.020489864842848267, 0.020424146093775603, 0.02035874831096237, 0.02029366515277522, 0.020228895279867456, 0.020164433944121415, 0.020100281427079484, 0.020036434896507242, 0.019972892462989958, 0.01990965114395062, 0.019846709543337802, 0.01978406575409046, 0.019721717282502257, 0.019659662113976177, 0.019597898714731745]
# plot!(-0.5:0.001:0.5, x*0.118/maximum(x))

# Plots.vline!([-0.05, 0.05])
# plot!(-0.5:0.001:0.5, z -> 0.0001 / abs(z), label="scaled 1/z") # this should be the true solution for a dirac source with no absorbtion
# Plots.ylims!(0.0, 0.03)


# ## 1D
# space_model = EPMAfem.SpaceModels.GridapSpaceModel(CartesianDiscreteModel((-0.5, 0.5), (100)))
# direction_model = EPMAfem.SphericalHarmonicsModels.EOSphericalHarmonicsModel(27, 1)
# model = EPMAfem.DiscreteMonochromPNModel(space_model, direction_model)

# function q(x)
#     return (norm(x) < 0.05) ? 1.0 : 0.001
# end

# source = EPMAfem.PNXΩSource(q, Ω -> 1.0)
# rhs = EPMAfem.discretize_rhs(source, model, EPMAfem.cpu())
# problem = EPMAfem.discretize_problem(eq, model, EPMAfem.cpu())
# system = EPMAfem.system(problem, EPMAfem.PNDirectSolver)

# solution = EPMAfem.allocate_solution_vector(system)
# EPMAfem.solve(solution, system, rhs)
# solp, solm = EPMAfem.pmview(solution, model)

# func1D = EPMAfem.SpaceModels.interpolable((p=solp[:, 1], ), space_model)

# plot(-0.5:0.01:0.5, z -> func1D(Gridap.VectorValue(z)), label="1D solution")
